// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π –º–∏–≥—Ä–∞—Ü–∏–∏
const { createClient } = require('@supabase/supabase-js');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = 'https://jvsypfwiajuwsyuzkyda.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp2c3lwZndpYWp1d3N5dXpreWRhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM5OTczNTcsImV4cCI6MjA2OTU3MzM1N30.8d8k7HK7lFgIirdHzackMYRn6gGgD5OyqgOUq2rk2RM';

const supabase = createClient(supabaseUrl, supabaseKey);

async function testMigrationFunctions() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –º–∏–≥—Ä–∞—Ü–∏–∏...\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ bucket –¥–æ—Å—Ç—É–ø–µ–Ω
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å bucket...');
    
    const { data: bucketData, error: bucketError } = await supabase.storage
      .from('avatars')
      .list('', { limit: 1 });
    
    if (bucketError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ bucket:', bucketError);
      return;
    }
    
    console.log('‚úÖ Bucket –¥–æ—Å—Ç—É–ø–µ–Ω');

    // 2. –ü–æ–ª—É—á–∞–µ–º –∏–≥—Ä–æ–∫–æ–≤ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –∞–≤–∞—Ç–∞—Ä–∞–º–∏
    console.log('\n2Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –∏–≥—Ä–æ–∫–æ–≤ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –∞–≤–∞—Ç–∞—Ä–∞–º–∏...');
    
    const { data: players, error: playersError } = await supabase
      .from('players')
      .select('*')
      .limit(5);

    if (playersError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤:', playersError);
      return;
    }

    const localPlayers = players.filter(p => p.avatar && p.avatar.startsWith('file://'));
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –∞–≤–∞—Ç–∞—Ä–∞–º–∏: ${localPlayers.length}`);

    // 3. –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∞–≤–∞—Ç–∞—Ä –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞
    console.log('\n3Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∞–≤–∞—Ç–∞—Ä—ã...');
    
    for (const player of localPlayers) {
      console.log(`\nüë§ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–≥—Ä–æ–∫–∞: ${player.name}`);
      
      // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞
      const testImageData = 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==';
      const testBuffer = Buffer.from(testImageData, 'base64');
      const testFileName = `migration_${player.id}_${Date.now()}.png`;
      
      console.log(`üìÅ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª: ${testFileName}`);
      
      const { data: uploadData, error: uploadError } = await supabase.storage
        .from('avatars')
        .upload(testFileName, testBuffer, {
          contentType: 'image/png',
          upsert: false
        });

      if (uploadError) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è ${player.name}:`, uploadError);
        continue;
      }

      console.log(`‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω: ${uploadData.path}`);
      
      // –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL
      const { data: urlData } = supabase.storage
        .from('avatars')
        .getPublicUrl(testFileName);
      
      if (urlData && urlData.publicUrl) {
        console.log(`üîó –ü—É–±–ª–∏—á–Ω—ã–π URL: ${urlData.publicUrl}`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä –∏–≥—Ä–æ–∫–∞
        console.log(`üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä –∏–≥—Ä–æ–∫–∞ ${player.name}...`);
        
        const { error: updateError } = await supabase
          .from('players')
          .update({ avatar: urlData.publicUrl })
          .eq('id', player.id);
        
        if (updateError) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è ${player.name}:`, updateError);
        } else {
          console.log(`‚úÖ –ê–≤–∞—Ç–∞—Ä –∏–≥—Ä–æ–∫–∞ ${player.name} –æ–±–Ω–æ–≤–ª–µ–Ω`);
        }
      }
    }

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
    
    const { data: updatedPlayers, error: updatedError } = await supabase
      .from('players')
      .select('name, avatar')
      .limit(5);

    if (updatedError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', updatedError);
    } else {
      console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:');
      updatedPlayers.forEach(player => {
        if (player.avatar && player.avatar.startsWith('http')) {
          console.log(`‚úÖ ${player.name}: Storage URL`);
        } else if (player.avatar && player.avatar.startsWith('file://')) {
          console.log(`‚ö†Ô∏è ${player.name}: –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª`);
        } else {
          console.log(`‚ùå ${player.name}: –ù–µ—Ç –∞–≤–∞—Ç–∞—Ä–∞`);
        }
      });
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testMigrationFunctions(); 