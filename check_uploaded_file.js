// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
const { createClient } = require('@supabase/supabase-js');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = 'https://jvsypfwiajuwsyuzkyda.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp2c3lwZndpYWp1d3N5dXpreWRhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM5OTczNTcsImV4cCI6MjA2OTU3MzM1N30.8d8k7HK7lFgIirdHzackMYRn6gGgD5OyqgOUq2rk2RM';

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkUploadedFile() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞...\n');
  
  const fileName = 'avatar_1754259402345.jpg';
  
  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
    console.log('üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª:', fileName);
    
    const { data: fileList, error: listError } = await supabase.storage
      .from('avatars')
      .list('', {
        limit: 1000,
        search: fileName
      });
    
    if (listError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤:', listError);
      return;
    }
    
    const file = fileList.find(f => f.name === fileName);
    if (!file) {
      console.error('‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ');
      return;
    }
    
    console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ:');
    console.log('   –ò–º—è:', file.name);
    console.log('   –†–∞–∑–º–µ—Ä:', file.metadata?.size || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ', '–±–∞–π—Ç');
    console.log('   –¢–∏–ø:', file.metadata?.mimetype || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ');
    console.log('   –û–±–Ω–æ–≤–ª–µ–Ω:', file.updated_at);
    
    // 2. –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª
    console.log('\nüì• –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª...');
    const { data: fileData, error: downloadError } = await supabase.storage
      .from('avatars')
      .download(fileName);
    
    if (downloadError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:', downloadError);
      return;
    }
    
    if (!fileData) {
      console.error('‚ùå –§–∞–π–ª –ø—É—Å—Ç–æ–π –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏');
      return;
    }
    
    console.log('‚úÖ –§–∞–π–ª —Å–∫–∞—á–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    console.log('üìä –†–∞–∑–º–µ—Ä —Å–∫–∞—á–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞:', fileData.size, '–±–∞–π—Ç');
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL
    console.log('\nüîó –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL...');
    const { data: urlData } = supabase.storage
      .from('avatars')
      .getPublicUrl(fileName);
    
    if (urlData && urlData.publicUrl) {
      console.log('‚úÖ –ü—É–±–ª–∏—á–Ω—ã–π URL:', urlData.publicUrl);
      
      // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ HTTP
      console.log('\nüåê –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ HTTP...');
      try {
        const response = await fetch(urlData.publicUrl);
        console.log('üìä HTTP —Å—Ç–∞—Ç—É—Å:', response.status, response.statusText);
        console.log('üìä Content-Type:', response.headers.get('content-type'));
        console.log('üìä Content-Length:', response.headers.get('content-length'), '–±–∞–π—Ç');
        
        if (response.ok) {
          const buffer = await response.arrayBuffer();
          console.log('üìä –†–∞–∑–º–µ—Ä –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', buffer.byteLength, '–±–∞–π—Ç');
          
          if (buffer.byteLength === 0) {
            console.error('‚ùå –§–∞–π–ª –ø—É—Å—Ç–æ–π –ø—Ä–∏ HTTP –∑–∞–ø—Ä–æ—Å–µ!');
          } else {
            console.log('‚úÖ –§–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –Ω–µ –ø—É—Å—Ç–æ–π');
          }
        } else {
          console.error('‚ùå HTTP –∑–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è');
        }
      } catch (httpError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ HTTP –∑–∞–ø—Ä–æ—Å–∞:', httpError);
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkUploadedFile(); 