// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–ª–æ–Ω–æ–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
// –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node test_columns.js

const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = 'https://jvsypfwiajuwsyuzkyda.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp2c3lwZndpYWp1d3N5dXpreWRhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM5OTczNTcsImV4cCI6MjA2OTU3MzM1N30.8d8k7HK7lFgIirdHzackMYRn6gGgD5OyqgOUq2rk2RM';

const supabase = createClient(supabaseUrl, supabaseKey);

async function testColumns() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–æ–Ω–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ players...\n');
    
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...');
    const { data: testData, error: testError } = await supabase
      .from('players')
      .select('id, name')
      .limit(1);
    
    if (testError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', testError.message);
      return;
    }
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç\n');
    
    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –∫–æ–ª–æ–Ω–æ–∫
    console.log('2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –∫–æ–ª–æ–Ω–æ–∫...');
    
    const columnsToTest = [
      'favorite_goals',
      'photos', 
      'number'
    ];
    
    for (const column of columnsToTest) {
      try {
        const { data, error } = await supabase
          .from('players')
          .select(`id, ${column}`)
          .limit(1);
        
        if (error) {
          console.log(`‚ùå –ö–æ–ª–æ–Ω–∫–∞ ${column}: –û–¢–°–£–¢–°–¢–í–£–ï–¢`);
          console.log(`   –û—à–∏–±–∫–∞: ${error.message}`);
        } else {
          console.log(`‚úÖ –ö–æ–ª–æ–Ω–∫–∞ ${column}: –ü–†–ò–°–£–¢–°–¢–í–£–ï–¢`);
        }
      } catch (err) {
        console.log(`‚ùå –ö–æ–ª–æ–Ω–∫–∞ ${column}: –û–®–ò–ë–ö–ê –ü–†–ò –ü–†–û–í–ï–†–ö–ï`);
        console.log(`   –û—à–∏–±–∫–∞: ${err.message}`);
      }
    }
    
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ...');
    const { data: allData, error: allError } = await supabase
      .from('players')
      .select('*')
      .limit(3);
    
    if (allError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', allError.message);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏–≥—Ä–æ–∫–æ–≤: ${allData.length}`);
      if (allData.length > 0) {
        const player = allData[0];
        console.log('üìã –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞:');
        console.log(`   ID: ${player.id}`);
        console.log(`   –ò–º—è: ${player.name}`);
        console.log(`   –ê–≤–∞—Ç–∞—Ä: ${player.avatar || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
        console.log(`   –õ—é–±–∏–º—ã–µ –≥–æ–ª—ã: ${player.favorite_goals || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã'}`);
        console.log(`   –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: ${player.photos || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã'}`);
        console.log(`   –ù–æ–º–µ—Ä: ${player.number || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

testColumns(); 