// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è URL –≤ Supabase Storage
const { createClient } = require('@supabase/supabase-js');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = 'https://jvsypfwiajuwsyuzkyda.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp2c3lwZndpYWp1d3N5dXpreWRhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM5OTczNTcsImV4cCI6MjA2OTU3MzM1N30.8d8k7HK7lFgIirdHzackMYRn6gGgD5OyqgOUq2rk2RM';

const supabase = createClient(supabaseUrl, supabaseKey);

async function testUrlFormation() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è URL...\n');
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤
  const testFileNames = [
    'avatar_1754256540827.jpg',
    '/avatar_1754256540827.jpg',  // —Å–æ —Å–ª–µ—à–µ–º –≤ –Ω–∞—á–∞–ª–µ
    'avatar_1754256540827.jpg/',  // —Å–æ —Å–ª–µ—à–µ–º –≤ –∫–æ–Ω—Ü–µ
    '/avatar_1754256540827.jpg/', // —Å–æ —Å–ª–µ—à–∞–º–∏ —Å –æ–±–µ–∏—Ö —Å—Ç–æ—Ä–æ–Ω
    'test_avatar.jpg',
    '/test_avatar.jpg'
  ];
  
  for (const fileName of testFileNames) {
    console.log(`üìÅ –¢–µ—Å—Ç–∏—Ä—É–µ–º: "${fileName}"`);
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL
      const { data: urlData } = supabase.storage
        .from('avatars')
        .getPublicUrl(fileName);
      
      if (urlData && urlData.publicUrl) {
        console.log(`‚úÖ URL: ${urlData.publicUrl}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–≤–æ–π–Ω–æ–π —Å–ª–µ—à
        if (urlData.publicUrl.includes('avatars//')) {
          console.log('‚ö†Ô∏è  –û–ë–ù–ê–†–£–ñ–ï–ù –î–í–û–ô–ù–û–ô –°–õ–ï–®!');
        }
      } else {
        console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL');
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞:', error.message);
    }
    
    console.log('');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª
  console.log('üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã...');
  try {
    const { data: files, error } = await supabase.storage
      .from('avatars')
      .list('', { limit: 10 });
    
    if (!error && files) {
      for (const file of files) {
        console.log(`üìÅ –§–∞–π–ª: "${file.name}"`);
        
        const { data: urlData } = supabase.storage
          .from('avatars')
          .getPublicUrl(file.name);
        
        if (urlData && urlData.publicUrl) {
          console.log(`üîó URL: ${urlData.publicUrl}`);
          if (urlData.publicUrl.includes('avatars//')) {
            console.log('‚ö†Ô∏è  –î–í–û–ô–ù–û–ô –°–õ–ï–® –í URL!');
          }
        }
        console.log('');
      }
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testUrlFormation(); 