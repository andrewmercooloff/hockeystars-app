// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ URL –∞–≤–∞—Ç–∞—Ä–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const { createClient } = require('@supabase/supabase-js');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = 'https://jvsypfwiajuwsyuzkyda.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp2c3lwZndpYWp1d3N5dXpreWRhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM5OTczNTcsImV4cCI6MjA2OTU3MzM1N30.8d8k7HK7lFgIirdHzackMYRn6gGgD5OyqgOUq2rk2RM';

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkDatabaseUrls() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ URL –∞–≤–∞—Ç–∞—Ä–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
    const { data: players, error } = await supabase
      .from('players')
      .select('id, name, avatar');
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤:', error);
      return;
    }
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∏–≥—Ä–æ–∫–æ–≤: ${players.length}\n`);
    
    let storageCount = 0;
    let localCount = 0;
    let brokenCount = 0;
    let missingCount = 0;
    
    for (const player of players) {
      console.log(`üë§ ${player.name}:`);
      
      if (!player.avatar) {
        console.log('   ‚ùå –ù–µ—Ç –∞–≤–∞—Ç–∞—Ä–∞');
        missingCount++;
        continue;
      }
      
      if (player.avatar.startsWith('http')) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º Storage URL
        if (player.avatar.includes('avatars//')) {
          console.log(`   ‚ö†Ô∏è  –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ô URL (–¥–≤–æ–π–Ω–æ–π —Å–ª–µ—à): ${player.avatar}`);
          brokenCount++;
        } else if (player.avatar.includes('avatars/')) {
          console.log(`   ‚úÖ Storage URL: ${player.avatar}`);
          storageCount++;
        } else {
          console.log(`   ‚ùì –î—Ä—É–≥–æ–π HTTP URL: ${player.avatar}`);
        }
      } else if (player.avatar.startsWith('file://') || player.avatar.startsWith('content://')) {
        console.log(`   üì± –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª: ${player.avatar}`);
        localCount++;
      } else {
        console.log(`   ‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: ${player.avatar}`);
      }
    }
    
    console.log('\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`   ‚úÖ –í Storage: ${storageCount}`);
    console.log(`   üì± –õ–æ–∫–∞–ª—å–Ω—ã–µ: ${localCount}`);
    console.log(`   ‚ö†Ô∏è  –°–ª–æ–º–∞–Ω–Ω—ã–µ URL: ${brokenCount}`);
    console.log(`   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç: ${missingCount}`);
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ª–æ–º–∞–Ω–Ω—ã–µ URL, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏—Å–ø—Ä–∞–≤–∏—Ç—å
    if (brokenCount > 0) {
      console.log('\nüîß –ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Å–ª–æ–º–∞–Ω–Ω—ã–µ URL!');
      console.log('–ó–∞–ø—É—Å—Ç–∏—Ç–µ: node fix_broken_urls.js');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkDatabaseUrls(); 