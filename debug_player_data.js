const { createClient } = require('@supabase/supabase-js');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = 'https://your-project.supabase.co';
const supabaseKey = 'your-anon-key';
const supabase = createClient(supabaseUrl, supabaseKey);

async function debugPlayerData() {
  console.log('üîç –û—Ç–ª–∞–¥–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤...\n');

  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
    const { data: players, error } = await supabase
      .from('players')
      .select('*')
      .order('name');

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤:', error);
      return;
    }

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∏–≥—Ä–æ–∫–æ–≤: ${players.length}\n`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞
    players.forEach((player, index) => {
      console.log(`\n--- –ò–≥—Ä–æ–∫ ${index + 1}: ${player.name} ---`);
      console.log('ID:', player.id);
      console.log('–°—Ç–∞—Ç—É—Å:', player.status);
      console.log('–ö–æ–º–∞–Ω–¥–∞:', player.team);
      console.log('–ü–æ–∑–∏—Ü–∏—è:', player.position);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ —Ö–æ–∫–∫–µ—è
      console.log('–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —Ö–æ–∫–∫–µ—è (hockey_start_date):', player.hockey_start_date);
      if (player.hockey_start_date) {
        console.log('‚úÖ –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —Ö–æ–∫–∫–µ—è –µ—Å—Ç—å');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã
        const dateParts = player.hockey_start_date.split('.');
        if (dateParts.length === 2) {
          const month = parseInt(dateParts[0]);
          const year = parseInt(dateParts[1]);
          console.log('–ú–µ—Å—è—Ü:', month, '–ì–æ–¥:', year);
          
          if (month >= 1 && month <= 12 && year >= 1900 && year <= 2030) {
            console.log('‚úÖ –§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π');
            
            // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–ø—ã—Ç
            const start = new Date(year, month - 1);
            const now = new Date();
            let years = now.getFullYear() - start.getFullYear();
            let months = now.getMonth() - start.getMonth();
            if (months < 0) {
              years--;
              months += 12;
            }
            
            const getYearWord = (num) => {
              if (num === 1) return '–≥–æ–¥';
              if (num >= 2 && num <= 4) return '–≥–æ–¥–∞';
              return '–ª–µ—Ç';
            };
            
            const experience = years > 0 ? `${years} ${getYearWord(years)}` : `${months} –º–µ—Å.`;
            console.log('üìÖ –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–π –æ–ø—ã—Ç:', experience);
          } else {
            console.log('‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã');
          }
        } else {
          console.log('‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã (–æ–∂–∏–¥–∞–µ—Ç—Å—è MM.YYYY)');
        }
      } else {
        console.log('‚ùå –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —Ö–æ–∫–∫–µ—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ—Ä–º–∞—Ç–∏–≤—ã
      console.log('\nüìä –ù–æ—Ä–º–∞—Ç–∏–≤—ã:');
      console.log('–ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è:', player.pull_ups);
      console.log('–û—Ç–∂–∏–º–∞–Ω–∏—è:', player.push_ups);
      console.log('–ü–ª–∞–Ω–∫–∞:', player.plank_time);
      console.log('100–º:', player.sprint_100m);
      console.log('–ü—Ä—ã–∂–æ–∫ –≤ –¥–ª–∏–Ω—É:', player.long_jump);
      
      const hasNormatives = player.pull_ups || player.push_ups || player.plank_time || player.sprint_100m || player.long_jump;
      console.log('–ï—Å—Ç—å –Ω–æ—Ä–º–∞—Ç–∏–≤—ã:', hasNormatives ? '‚úÖ' : '‚ùå');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–µ–æ
      console.log('\nüé• –í–∏–¥–µ–æ –º–æ–º–µ–Ω—Ç–æ–≤:');
      console.log('favorite_goals:', player.favorite_goals);
      if (player.favorite_goals) {
        const videos = player.favorite_goals.split('\n').filter(goal => goal.trim());
        console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ:', videos.length);
        videos.forEach((video, i) => {
          console.log(`  –í–∏–¥–µ–æ ${i + 1}:`, video);
        });
      } else {
        console.log('‚ùå –í–∏–¥–µ–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
      console.log('\nüì∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:');
      console.log('photos:', player.photos);
      if (player.photos) {
        try {
          const photos = JSON.parse(player.photos);
          console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:', photos.length);
        } catch (e) {
          console.log('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:', e.message);
        }
      } else {
        console.log('‚ùå –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
      }
      
      console.log('\n' + '='.repeat(50));
    });

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–ª–∞–¥–∫—É
debugPlayerData(); 