// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const { createClient } = require('@supabase/supabase-js');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = 'https://jvsypfwiajuwsyuzkyda.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp2c3lwZndpYWp1d3N5dXpreWRhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM5OTczNTcsImV4cCI6MjA2OTU3MzM1N30.8d8k7HK7lFgIirdHzackMYRn6gGgD5OyqgOUq2rk2RM';

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkDatabaseStatus() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    const { data: testData, error: testError } = await supabase
      .from('players')
      .select('count')
      .limit(1);
    
    if (testError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', testError);
      return;
    }
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç');

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É storage.buckets –Ω–∞–ø—Ä—è–º—É—é
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É storage.buckets...');
    const { data: bucketsData, error: bucketsError } = await supabase
      .rpc('exec_sql', {
        query: 'SELECT id, name, public, file_size_limit, created_at FROM storage.buckets ORDER BY name;'
      });

    if (bucketsError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å storage.buckets —á–µ—Ä–µ–∑ RPC');
      console.log('üîç –ü–æ–ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–±...');
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π SQL –∑–∞–ø—Ä–æ—Å
      const { data: directBuckets, error: directError } = await supabase
        .from('storage.buckets')
        .select('*');
      
      if (directError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∫ storage.buckets:', directError);
      } else {
        console.log('üì¶ Buckets –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:');
        if (directBuckets && directBuckets.length > 0) {
          directBuckets.forEach(bucket => {
            console.log(`   - ${bucket.id} (public: ${bucket.public})`);
          });
        } else {
          console.log('   - –ù–µ—Ç buckets –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
        }
      }
    } else {
      console.log('üì¶ Buckets –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:');
      if (bucketsData && bucketsData.length > 0) {
        bucketsData.forEach(bucket => {
          console.log(`   - ${bucket.id} (public: ${bucket.public})`);
        });
      } else {
        console.log('   - –ù–µ—Ç buckets –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      }
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏ storage.objects...');
    const { data: policiesData, error: policiesError } = await supabase
      .rpc('exec_sql', {
        query: `
          SELECT policyname, cmd, qual, with_check 
          FROM pg_policies 
          WHERE tablename = 'objects' AND schemaname = 'storage'
          ORDER BY policyname;
        `
      });

    if (policiesError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª–∏—Ç–∏–∫–∏ —á–µ—Ä–µ–∑ RPC');
    } else {
      console.log('üìã –ü–æ–ª–∏—Ç–∏–∫–∏ storage.objects:');
      if (policiesData && policiesData.length > 0) {
        policiesData.forEach(policy => {
          console.log(`   - ${policy.policyname} (${policy.cmd})`);
        });
      } else {
        console.log('   - –ù–µ—Ç –ø–æ–ª–∏—Ç–∏–∫ –¥–ª—è storage.objects');
      }
    }

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º RLS
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º RLS –¥–ª—è storage.objects...');
    const { data: rlsData, error: rlsError } = await supabase
      .rpc('exec_sql', {
        query: `
          SELECT schemaname, tablename, rowsecurity 
          FROM pg_tables 
          WHERE schemaname = 'storage' AND tablename = 'objects';
        `
      });

    if (rlsError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å RLS —á–µ—Ä–µ–∑ RPC');
    } else {
      console.log('üîí RLS –¥–ª—è storage.objects:');
      if (rlsData && rlsData.length > 0) {
        rlsData.forEach(table => {
          console.log(`   - ${table.schemaname}.${table.tablename} (rowsecurity: ${table.rowsecurity})`);
        });
      } else {
        console.log('   - –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ RLS');
      }
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const { data: userData, error: userError } = await supabase.auth.getUser();
    
    if (userError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ');
    } else {
      console.log('üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:');
      if (userData.user) {
        console.log(`   - ID: ${userData.user.id}`);
        console.log(`   - Email: ${userData.user.email}`);
        console.log(`   - Role: ${userData.user.role || 'anon'}`);
      } else {
        console.log('   - –ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
      }
    }

    console.log('\nüéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkDatabaseStatus(); 