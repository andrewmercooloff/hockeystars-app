const { createClient } = require('@supabase/supabase-js');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = 'https://jvsypfwiajuwsyuzkyda.supabase.co';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp2c3lwZndpYWp1d3N5dXpreWRhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM5OTczNTcsImV4cCI6MjA2OTU3MzM1N30.8d8k7HK7lFgIirdHzackMYRn6gGgD5OyqgOUq2rk2RM';

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function testAppIntegration() {
  console.log('üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å Supabase...');
  
  try {
    // –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
    console.log('üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞...');
    const testPlayer = {
      name: '–¢–µ—Å—Ç–æ–≤—ã–π –•–æ–∫–∫–µ–∏—Å—Ç',
      position: '–ù–∞–ø–∞–¥–∞—é—â–∏–π',
      team: '–¢–µ—Å—Ç–æ–≤–∞—è –ö–æ–º–∞–Ω–¥–∞',
      age: 25,
      height: 180,
      weight: 80,
      email: 'hockey@test.com',
      password: 'test123',
      status: 'user',
      city: '–ú–∏–Ω—Å–∫',
      goals: 10,
      assists: 15,
      games: 20,
      pull_ups: 15,
      push_ups: 30,
      plank_time: 60,
      sprint_100m: 12.5,
      long_jump: 250
    };
    
    const { data: newPlayer, error: insertError } = await supabase
      .from('players')
      .insert([testPlayer])
      .select()
      .single();
    
    if (insertError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä–æ–∫–∞:', insertError.message);
      return false;
    }
    
    console.log('‚úÖ –ò–≥—Ä–æ–∫ —Å–æ–∑–¥–∞–Ω:', newPlayer.name, '(ID:', newPlayer.id + ')');
    
    // –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥—Ä—É–∂–±—ã
    console.log('üë§ –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞...');
    const testPlayer2 = {
      name: '–í—Ç–æ—Ä–æ–π –•–æ–∫–∫–µ–∏—Å—Ç',
      position: '–ó–∞—â–∏—Ç–Ω–∏–∫',
      team: '–î—Ä—É–≥–∞—è –ö–æ–º–∞–Ω–¥–∞',
      age: 28,
      height: 185,
      weight: 85,
      email: 'hockey2@test.com',
      password: 'test456',
      status: 'user',
      city: '–ì–æ–º–µ–ª—å',
      goals: 5,
      assists: 20,
      games: 25,
      pull_ups: 20,
      push_ups: 35,
      plank_time: 90,
      sprint_100m: 13.0,
      long_jump: 260
    };
    
    const { data: newPlayer2, error: insertError2 } = await supabase
      .from('players')
      .insert([testPlayer2])
      .select()
      .single();
    
    if (insertError2) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞:', insertError2.message);
      return false;
    }
    
    console.log('‚úÖ –í—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫ —Å–æ–∑–¥–∞–Ω:', newPlayer2.name, '(ID:', newPlayer2.id + ')');
    
    // –¢–µ—Å—Ç 3: –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –¥—Ä—É–∂–±—ã
    console.log('ü§ù –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –¥—Ä—É–∂–±—ã...');
    const { data: friendRequest, error: friendError } = await supabase
      .from('friend_requests')
      .insert([{
        from_id: newPlayer.id,
        to_id: newPlayer2.id,
        status: 'pending'
      }])
      .select()
      .single();
    
    if (friendError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –¥—Ä—É–∂–±—ã:', friendError.message);
      return false;
    }
    
    console.log('‚úÖ –ó–∞–ø—Ä–æ—Å –¥—Ä—É–∂–±—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω (ID:', friendRequest.id + ')');
    
    // –¢–µ—Å—Ç 4: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    console.log('üí¨ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è...');
    const { data: message, error: messageError } = await supabase
      .from('messages')
      .insert([{
        sender_id: newPlayer.id,
        receiver_id: newPlayer2.id,
        text: '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?',
        read: false
      }])
      .select()
      .single();
    
    if (messageError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', messageError.message);
      return false;
    }
    
    console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (ID:', message.id + ')');
    
    // –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
    console.log('üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
    const { data: players, error: playersError } = await supabase
      .from('players')
      .select('*')
      .order('created_at', { ascending: false });
    
    if (playersError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤:', playersError.message);
      return false;
    }
    
    console.log('‚úÖ –ò–≥—Ä–æ–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã:', players.length);
    players.forEach((player, index) => {
      console.log(`  ${index + 1}. ${player.name} (${player.email}) - ${player.status}`);
    });
    
    // –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –¥—Ä—É–∂–±—ã
    const { data: friendRequests, error: friendRequestsError } = await supabase
      .from('friend_requests')
      .select('*')
      .order('created_at', { ascending: false });
    
    if (friendRequestsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –¥—Ä—É–∂–±—ã:', friendRequestsError.message);
      return false;
    }
    
    console.log('‚úÖ –ó–∞–ø—Ä–æ—Å—ã –¥—Ä—É–∂–±—ã –ø–æ–ª—É—á–µ–Ω—ã:', friendRequests.length);
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
    const { data: messages, error: messagesError } = await supabase
      .from('messages')
      .select('*')
      .order('created_at', { ascending: false });
    
    if (messagesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π:', messagesError.message);
      return false;
    }
    
    console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã:', messages.length);
    
    // –¢–µ—Å—Ç 6: –ü—Ä–∏–Ω—è—Ç–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –¥—Ä—É–∂–±—ã
    console.log('‚úÖ –ü—Ä–∏–Ω—è—Ç–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –¥—Ä—É–∂–±—ã...');
    const { error: acceptError } = await supabase
      .from('friend_requests')
      .update({ status: 'accepted' })
      .eq('id', friendRequest.id);
    
    if (acceptError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞–ø—Ä–æ—Å–∞ –¥—Ä—É–∂–±—ã:', acceptError.message);
      return false;
    }
    
    console.log('‚úÖ –ó–∞–ø—Ä–æ—Å –¥—Ä—É–∂–±—ã –ø—Ä–∏–Ω—è—Ç');
    
    // –¢–µ—Å—Ç 7: –°–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    console.log('üîî –°–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
    const { data: notification, error: notificationError } = await supabase
      .from('notifications')
      .insert([{
        user_id: newPlayer2.id,
        type: 'friend_request_accepted',
        title: '–ó–∞–ø—Ä–æ—Å –¥—Ä—É–∂–±—ã –ø—Ä–∏–Ω—è—Ç',
        message: `${newPlayer.name} –ø—Ä–∏–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å –¥—Ä—É–∂–±—ã`,
        is_read: false
      }])
      .select()
      .single();
    
    if (notificationError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', notificationError.message);
      return false;
    }
    
    console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ (ID:', notification.id + ')');
    
    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìã –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`  - –ò–≥—Ä–æ–∫–æ–≤: ${players.length}`);
    console.log(`  - –ó–∞–ø—Ä–æ—Å–æ–≤ –¥—Ä—É–∂–±—ã: ${friendRequests.length}`);
    console.log(`  - –°–æ–æ–±—â–µ–Ω–∏–π: ${messages.length}`);
    console.log(`  - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: ${1}`);
    
    return true;
    
  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (require.main === module) {
  testAppIntegration().then(success => {
    if (success) {
      console.log('üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Supabase!');
      process.exit(0);
    } else {
      console.log('üí• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –Ω–µ –ø—Ä–æ—à–ª–æ');
      process.exit(1);
    }
  });
}

module.exports = { testAppIntegration }; 