const { createClient } = require('@supabase/supabase-js');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = 'https://your-project.supabase.co';
const supabaseKey = 'your-anon-key';
const supabase = createClient(supabaseUrl, supabaseKey);

async function testAdminEdit() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–≥—Ä–æ–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º...');
    
    // 1. –ù–∞–π–¥–µ–º –∏–≥—Ä–æ–∫–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const { data: players, error: playersError } = await supabase
      .from('players')
      .select('*')
      .limit(1);
    
    if (playersError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–≥—Ä–æ–∫–æ–≤:', playersError);
      return;
    }
    
    if (!players || players.length === 0) {
      console.log('‚ùå –ù–µ—Ç –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }
    
    const player = players[0];
    console.log('‚úÖ –ù–∞–π–¥–µ–Ω –∏–≥—Ä–æ–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', player.name);
    
    // 2. –û–±–Ω–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞
    const updates = {
      name: player.name + ' (–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ)',
      number: '99',
      position: '–ù–∞–ø–∞–¥–∞—é—â–∏–π',
      team: '–î–∏–Ω–∞–º–æ –ú–∏–Ω—Å–∫',
      height: '180',
      weight: '80',
      pull_ups: '15',
      push_ups: '30',
      plank_time: '60',
      sprint_100m: '12.5',
      long_jump: '250',
      favorite_goals: '["https://youtube.com/watch?v=test1", "https://youtube.com/watch?v=test2"]',
      photos: '["https://example.com/photo1.jpg", "https://example.com/photo2.jpg"]'
    };
    
    console.log('üìù –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞...');
    const { data: updatedPlayer, error: updateError } = await supabase
      .from('players')
      .update(updates)
      .eq('id', player.id)
      .select()
      .single();
    
    if (updateError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞:', updateError);
      return;
    }
    
    console.log('‚úÖ –ò–≥—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
    console.log('üìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:');
    console.log('- –ò–º—è:', updatedPlayer.name);
    console.log('- –ù–æ–º–µ—Ä:', updatedPlayer.number);
    console.log('- –ü–æ–∑–∏—Ü–∏—è:', updatedPlayer.position);
    console.log('- –ö–æ–º–∞–Ω–¥–∞:', updatedPlayer.team);
    console.log('- –†–æ—Å—Ç:', updatedPlayer.height);
    console.log('- –í–µ—Å:', updatedPlayer.weight);
    console.log('- –ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è:', updatedPlayer.pull_ups);
    console.log('- –û—Ç–∂–∏–º–∞–Ω–∏—è:', updatedPlayer.push_ups);
    console.log('- –ü–ª–∞–Ω–∫–∞:', updatedPlayer.plank_time);
    console.log('- 100–º:', updatedPlayer.sprint_100m);
    console.log('- –ü—Ä—ã–∂–æ–∫:', updatedPlayer.long_jump);
    console.log('- –õ—é–±–∏–º—ã–µ –≥–æ–ª—ã:', updatedPlayer.favorite_goals);
    console.log('- –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:', updatedPlayer.photos);
    
    // 3. –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å
    const { data: checkPlayer, error: checkError } = await supabase
      .from('players')
      .select('*')
      .eq('id', player.id)
      .single();
    
    if (checkError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', checkError);
      return;
    }
    
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testAdminEdit(); 