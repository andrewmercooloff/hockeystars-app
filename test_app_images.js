// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
const { createClient } = require('@supabase/supabase-js');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = 'https://jvsypfwiajuwsyuzkyda.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp2c3lwZndpYWp1d3N5dXpreWRhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM5OTczNTcsImV4cCI6MjA2OTU3MzM1N30.8d8k7HK7lFgIirdHzackMYRn6gGgD5OyqgOUq2rk2RM';

const supabase = createClient(supabaseUrl, supabaseKey);

async function testAppImages() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏...\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–æ–≤
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–æ–≤...');
    const { data: players, error: playersError } = await supabase
      .from('players')
      .select('id, name, avatar, photos')
      .limit(5);

    if (playersError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤:', playersError);
      return;
    }

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∏–≥—Ä–æ–∫–æ–≤: ${players.length}`);
    
    let totalAvatars = 0;
    let storageAvatars = 0;
    let localAvatars = 0;
    let nullAvatars = 0;
    
    let totalPhotos = 0;
    let storagePhotos = 0;
    let localPhotos = 0;

    for (const player of players) {
      console.log(`\nüë§ –ò–≥—Ä–æ–∫: ${player.name}`);
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–≤–∞—Ç–∞—Ä
      if (player.avatar) {
        totalAvatars++;
        if (player.avatar.startsWith('http')) {
          storageAvatars++;
          console.log(`   ‚úÖ –ê–≤–∞—Ç–∞—Ä –≤ Storage: ${player.avatar}`);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∞–≤–∞—Ç–∞—Ä–∞
          try {
            const response = await fetch(player.avatar, { method: 'HEAD' });
            if (response.ok) {
              console.log(`   ‚úÖ –ê–≤–∞—Ç–∞—Ä –¥–æ—Å—Ç—É–ø–µ–Ω (${response.status})`);
            } else {
              console.log(`   ‚ö†Ô∏è –ê–≤–∞—Ç–∞—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (${response.status})`);
            }
          } catch (error) {
            console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞: ${error.message}`);
          }
        } else if (player.avatar.startsWith('file://') || player.avatar.startsWith('content://') || player.avatar.startsWith('data:')) {
          localAvatars++;
          console.log(`   ‚ö†Ô∏è –õ–æ–∫–∞–ª—å–Ω—ã–π –∞–≤–∞—Ç–∞—Ä: ${player.avatar}`);
        } else {
          console.log(`   ‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∞–≤–∞—Ç–∞—Ä–∞: ${player.avatar}`);
        }
      } else {
        nullAvatars++;
        console.log(`   ‚ùå –ù–µ—Ç –∞–≤–∞—Ç–∞—Ä–∞`);
      }
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
      if (player.photos) {
        let photos = [];
        try {
          photos = JSON.parse(player.photos);
        } catch (error) {
          console.log(`   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: ${error.message}`);
          continue;
        }
        
        if (Array.isArray(photos)) {
          totalPhotos += photos.length;
          for (const photo of photos) {
            if (photo.startsWith('http')) {
              storagePhotos++;
              console.log(`   ‚úÖ –§–æ—Ç–æ –≤ Storage: ${photo}`);
            } else if (photo.startsWith('file://') || photo.startsWith('content://') || photo.startsWith('data:')) {
              localPhotos++;
              console.log(`   ‚ö†Ô∏è –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ: ${photo}`);
            }
          }
        }
      }
    }

    // 2. –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:');
    console.log(`   –ê–≤–∞—Ç–∞—Ä—ã:`);
    console.log(`     –í—Å–µ–≥–æ: ${totalAvatars}`);
    console.log(`     –í Storage: ${storageAvatars}`);
    console.log(`     –õ–æ–∫–∞–ª—å–Ω—ã–µ: ${localAvatars}`);
    console.log(`     –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç: ${nullAvatars}`);
    console.log(`   –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:`);
    console.log(`     –í—Å–µ–≥–æ: ${totalPhotos}`);
    console.log(`     –í Storage: ${storagePhotos}`);
    console.log(`     –õ–æ–∫–∞–ª—å–Ω—ã–µ: ${localPhotos}`);

    // 3. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    if (localAvatars > 0 || localPhotos > 0) {
      console.log('   ‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
      console.log('   üîß –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏');
      console.log('   üìã –ù–∞–∂–º–∏—Ç–µ "–ò—Å–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ" –≤ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏');
    } else {
      console.log('   ‚úÖ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ Storage');
      console.log('   üéâ –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π —Ä–µ—à–µ–Ω–∞!');
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testAppImages(); 