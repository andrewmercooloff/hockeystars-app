const { createClient } = require('@supabase/supabase-js');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ)
const supabaseUrl = 'https://your-project.supabase.co';
const supabaseKey = 'your-anon-key';
const supabase = createClient(supabaseUrl, supabaseKey);

async function checkDatabase() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n');

  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
    const { data: players, error } = await supabase
      .from('players')
      .select('*')
      .order('name');

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤:', error);
      return;
    }

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∏–≥—Ä–æ–∫–æ–≤: ${players.length}\n`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞
    players.forEach((player, index) => {
      console.log(`\n--- –ò–≥—Ä–æ–∫ ${index + 1}: ${player.name} ---`);
      console.log('ID:', player.id);
      console.log('–°—Ç–∞—Ç—É—Å:', player.status);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ —Ö–æ–∫–∫–µ—è
      console.log('\nüèí –•–æ–∫–∫–µ–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:');
      console.log('   hockey_start_date (–≤ –ë–î):', player.hockey_start_date);
      console.log('   hockey_start_date —Ç–∏–ø:', typeof player.hockey_start_date);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ—Ä–º–∞—Ç–∏–≤—ã
      console.log('\nüìä –ù–æ—Ä–º–∞—Ç–∏–≤—ã (–≤ –ë–î):');
      console.log('   pull_ups:', player.pull_ups, '(—Ç–∏–ø:', typeof player.pull_ups, ')');
      console.log('   push_ups:', player.push_ups, '(—Ç–∏–ø:', typeof player.push_ups, ')');
      console.log('   plank_time:', player.plank_time, '(—Ç–∏–ø:', typeof player.plank_time, ')');
      console.log('   sprint_100m:', player.sprint_100m, '(—Ç–∏–ø:', typeof player.sprint_100m, ')');
      console.log('   long_jump:', player.long_jump, '(—Ç–∏–ø:', typeof player.long_jump, ')');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–µ–æ
      console.log('\nüé• –í–∏–¥–µ–æ –º–æ–º–µ–Ω—Ç–æ–≤ (–≤ –ë–î):');
      console.log('   favorite_goals:', player.favorite_goals);
      console.log('   favorite_goals —Ç–∏–ø:', typeof player.favorite_goals);
      if (player.favorite_goals) {
        console.log('   favorite_goals.length:', player.favorite_goals.length);
        console.log('   favorite_goals.trim():', player.favorite_goals.trim());
        console.log('   favorite_goals !== "":', player.favorite_goals.trim() !== '');
      }
      
      console.log('\n' + '='.repeat(50));
    });

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkDatabase(); 